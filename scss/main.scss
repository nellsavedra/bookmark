// Custom.scss
// Option A: Include all of Bootstrap

// Include any default variable overrides here (though functions won't be available)

$primary: #5265e1;
$secondary: #fa5959;
$variable-prefix: nellsavedra- !default;

//$nav-link-font-size: 0.75rem;
$nav-link-color: #333;
$nav-link-hover-color: $secondary;

$enable-negative-margins: true;

$btn-border-width: 2px !default;

$enable-shadows: false;

$input-box-shadow: none;
$input-btn-focus-box-shadow: none;
$input-placeholder-color: #ced4da;

$btn-box-shadow: none;
$btn-active-box-shadow: none;
$btn-focus-box-shadow: none;

// scss-docs-start accordion-variables
$accordion-padding-y: 1rem !default;
$accordion-padding-x: 1.25rem !default;
$accordion-color: inherit !default;
$accordion-bg: white !default;
$accordion-border-width: 0 !default;
$accordion-border-color: none;
$accordion-border-radius: none;
$accordion-inner-border-radius: none;

$accordion-body-padding-y: $accordion-padding-y !default;
$accordion-body-padding-x: $accordion-padding-x !default;

$accordion-button-padding-y: $accordion-padding-y !default;
$accordion-button-padding-x: $accordion-padding-x !default;
$accordion-button-color: $accordion-color !default;
$accordion-button-bg: $accordion-bg !default;
$accordion-transition: all 0.15s ease !default;
$accordion-button-active-bg: white;
$accordion-button-active-color: $secondary;

$accordion-button-focus-border-color: none !default;
$accordion-button-focus-box-shadow: none !default;

$accordion-icon-width: 18px !default;
$accordion-icon-color: $primary !default;
$accordion-icon-active-color: $secondary !default;
$accordion-icon-transition: transform 0.2s ease-in-out !default;
$accordion-icon-transform: rotate(-180deg) !default;

$accordion-button-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='18' height='12'><path fill='none' stroke='#{$primary}' stroke-width='3' d='M1 1l8 8 8-8'/></svg>") !default;
$accordion-button-active-icon: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='18' height='12'><path fill='none' stroke='#{$secondary}' stroke-width='3' d='M1 1l8 8 8-8'/></svg>") !default;

// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.

// scss-docs-start container-max-widths
$container-max-widths: (
	sm: 540px,
	md: 720px,
	lg: 960px,
	xl: 1140px,
) !default;
// scss-docs-end container-max-widths

$spacer: 1rem !default;
$spacers: (
	0: 0,
	1: $spacer * 0.25,
	2: $spacer * 0.5,
	3: $spacer,
	4: $spacer * 1.5,
	5: $spacer * 3,
	6: $spacer * 6,
	7: $spacer * 12,
) !default;

$font-family-sans-serif: "Rubik", sans-serif;

@import "../node_modules/bootstrap/scss/bootstrap";

// Then add additional custom code here

body {
	color: #333;
}
.squeeze {
	transition: transform 300ms ease;
	&:hover {
		transform: scale(0.9875);
	}
}

.text-gray-600 {
	color: $gray-600;
}

nav {
	.menu-hamburger {
		fill: #333;
	}
}

nav .navbar-nav .nav-link {
	letter-spacing: 0.15rem;
	font-size: 0.75rem;
}

.btn-primary {
	color: $body-bg;
	&:hover {
		color: $primary;
		background-color: $body-bg;
		border-color: $primary;
	}
	&:active {
		color: $primary;
		background-color: $body-bg;
	}
}

.btn-secondary {
	color: $body-bg;

	&:hover {
		color: $secondary;
		background-color: $body-bg;
	}
	&:active {
		color: $secondary;
		background-color: $body-bg;
	}
	&:focus {
		color: $secondary;
		background-color: $body-bg;
	}
}

.btn-alternate {
	background-color: $gray-200;
	border-color: $gray-200;
	color: $gray-700;

	&:hover {
		color: $gray-800;
		background-color: $body-bg;
		border-color: $gray-800;
	}
}

#get-bookmark {
	h1 {
		font-size: 3rem;
		@media (max-width: 575px) {
			font-size: 2.25rem;
		}
	}
}

.get-bookmark-slide {
	position: relative;
	&::after {
		content: "";
		position: absolute;
		top: 50%;
		left: 25%;
		z-index: -1;
		display: block;
		width: 100vw;
		height: 20em;
		background: $primary;
		border-top-left-radius: 25rem;
		border-bottom-left-radius: 25rem;
		transform: translateY(-25%);
	}

	@media (max-width: 991px) {
		&::after {
			left: -50%;
			width: 200vw;
			height: 100%;
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;
			transform: translateY(-50%);
		}
	}
}

.tabs .nav-link {
	border: none;
	border-bottom: 1px solid #dee2e6 !important;
	position: relative;
	color: $gray-600;
	font-weight: lighter;

	&:hover {
		color: $secondary;
	}
	&:hover::after {
		content: "";
		display: block;
		bottom: 0;
		left: 0;
		width: 100%;
		height: 3px;
		background-color: $secondary;
		position: absolute;
	}

	&.active {
		color: #333;
		font-weight: normal;
		background-color: transparent;
		&::after {
			content: "";
			display: block;
			bottom: 0;
			left: 0;
			width: 100%;
			height: 3px;
			background-color: $secondary;
			position: absolute;
		}
	}
}

.tab-image {
	position: relative;
	&::after {
		content: "";
		position: absolute;
		top: 5rem;
		right: 8rem;
		z-index: -1;
		display: block;
		width: 100vw;
		height: 22.875rem;
		background: $primary;
		border-top-right-radius: 25rem;
		border-bottom-right-radius: 25rem;
	}

	@media (max-width: 991px) {
		&::after {
			top: 50%;
			right: -50%;
			width: 200vw;
			height: 125%;
			border-top-right-radius: 0;
			border-bottom-right-radius: 0;
			transform: translateY(-50%);
		}
	}
}

#downloads .card-item .card {
	border-radius: 0.5rem;
	transition: all 300ms ease;

	&:hover {
		box-shadow: $box-shadow;

		img {
			transform: scale(0.98);
		}
	}

	img {
		transition: all 300ms ease;
	}

	.card-img-top {
		max-height: 100px;
		width: auto;
		display: block;
		margin: 0 auto;
	}

	.card-body {
		padding: 0;
	}
}

@media (max-width: 991px) {
	img {
		max-width: 100%;
		height: auto;
	}
}

@media (min-width: 991px) {
	$cards: 3;

	@for $i from 1 through $cards {
		.card-item:nth-child(#{$i}) {
			margin-top: ($i * 50px);
		}
	}
}

.accordion-button {
	&:hover {
		color: $secondary;
	}
	&::after {
		background-position: center;
	}
}

#newsletter {
	background-color: $primary;
	color: white;
}

.footer-claim {
	letter-spacing: 0.25em;
}

.form-control::placeholder {
	font-size: 1rem;
}

#footer-menu {
	background-color: shade-color($primary, 50);
	
	a {
		color: white;
		&:hover {
			color: $secondary;
		}
	}
	
	.social-icon {
		&:hover .icon {
			fill: $secondary;
		}
	}
}

#mobile-nav {
	background-color: rgba(shade-color($primary, 50), .95);
	position: fixed;
	width: 100vw;
	height: 100vh;
	z-index: 999;
	display: none;
	
	ul {
		list-style: none;
		margin: 0;
		padding:0;
	}
	
	a{
		color: white;
		letter-spacing: .25rem;
	}
	
	.mobile-nav-logo .logo-symbol {
		fill: shade-color($primary, 50);
	}
	
	.btn {
		border-color: white;
		
		@mixin pseudos {
			background-color: white;
			color: rgba(shade-color($primary, 50), .95);
		}
		
		&:hover {
			@include pseudos;
		}
		
		&:focus {
			@include pseudos;
		}
		
		&:active {
			@include pseudos;
		}
	}
}